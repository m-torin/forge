# Observability Package Environment Variables
# Copy relevant variables to your app's .env.local file

# =============================================================================
# SENTRY CONFIGURATION (Recommended)
# =============================================================================

# Sentry Client DSN (for client-side error tracking)
NEXT_PUBLIC_SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# Sentry Server DSN (for server-side error tracking)
SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# Sentry Organization (for deployments and releases)
SENTRY_ORG=your-sentry-organization

# Sentry Project (for deployments and releases)
SENTRY_PROJECT=your-sentry-project

# Sentry Auth Token (for deployments and releases)
SENTRY_AUTH_TOKEN=your-sentry-auth-token

# =============================================================================
# LOGTAIL CONFIGURATION (Optional)
# =============================================================================

# Logtail Source Token (for centralized logging)
# Get from: https://betterstack.com/logs
LOGTAIL_SOURCE_TOKEN=your-logtail-source-token

# =============================================================================
# GRAFANA MONITORING (Optional - Advanced)
# =============================================================================

# Enable Grafana monitoring (disabled by default)
ENABLE_GRAFANA_MONITORING=false

# Grafana endpoints (only if Grafana monitoring enabled)
GRAFANA_URL=https://grafana.your-domain.com
PROMETHEUS_URL=https://grafana.your-domain.com:9090
LOKI_URL=https://grafana.your-domain.com:3100
OTEL_HTTP_URL=https://grafana.your-domain.com:4318
RUM_URL=https://grafana.your-domain.com:12347

# Service identification
SERVICE_NAME=your-app-name
SERVICE_VERSION=1.0.0

# Feature flags for Grafana monitoring
ENABLE_RUM=true
ENABLE_TRACES=true
ENABLE_METRICS=true
ENABLE_LOGS=true
ENABLE_HEALTH_CHECKS=true

# =============================================================================
# ERROR TRACKING CONFIGURATION (Optional)
# =============================================================================

# Error tracking settings
SENTRY_ENVIRONMENT=development
SENTRY_SAMPLE_RATE=1.0
SENTRY_TRACES_SAMPLE_RATE=0.1

# Release tracking
SENTRY_RELEASE=your-app-version
SENTRY_DEPLOY_ENV=development

# =============================================================================
# PERFORMANCE MONITORING (Optional)
# =============================================================================

# Performance monitoring
ENABLE_PERFORMANCE_MONITORING=true
PERFORMANCE_SAMPLE_RATE=0.1

# Real User Monitoring (RUM)
ENABLE_RUM_MONITORING=true

# =============================================================================
# LOGGING CONFIGURATION (Optional)
# =============================================================================

# Log level (error, warn, info, debug)
LOG_LEVEL=info

# Enable structured logging
STRUCTURED_LOGGING=true

# Log format (json, text)
LOG_FORMAT=json

# =============================================================================
# SETUP INSTRUCTIONS
# =============================================================================

# 1. Sentry Setup (Recommended):
#    - Create account at https://sentry.io/
#    - Create new project
#    - Copy DSN from Project Settings
#    - Set up error boundaries in React
#    - Configure source maps for better debugging

# 2. Logtail Setup (Optional):
#    - Create account at https://betterstack.com/
#    - Create new log source
#    - Copy source token
#    - Logs will be automatically forwarded

# 3. Grafana Setup (Advanced):
#    - Deploy Grafana stack (Grafana, Prometheus, Loki)
#    - Configure endpoints in environment variables
#    - Enable ENABLE_GRAFANA_MONITORING=true
#    - Set up dashboards and alerts

# 4. Error Tracking Best Practices:
#    - Use error boundaries in React components
#    - Add contextual information to errors
#    - Set up alerts for critical errors
#    - Monitor error rates and trends

# 5. Performance Monitoring:
#    - Track Core Web Vitals
#    - Monitor API response times
#    - Set up performance budgets
#    - Use tracing for complex operations

# 6. Release Tracking:
#    - Tag releases with SENTRY_RELEASE
#    - Associate commits with releases
#    - Track deployment success/failure
#    - Monitor post-deployment error rates

# 7. Logging Strategy:
#    - Use structured logging in production
#    - Include request IDs for tracing
#    - Log important business events
#    - Avoid logging sensitive information

# 8. Alerting:
#    - Set up alerts for error spikes
#    - Monitor critical user journeys
#    - Alert on performance degradation
#    - Use different alert channels (email, Slack, etc.)

# 9. Privacy Considerations:
#    - Don't log personal information
#    - Scrub sensitive data from errors
#    - Comply with GDPR/privacy regulations
#    - Use data sampling for high-volume events