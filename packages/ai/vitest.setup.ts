import '@repo/qa/vitest/setup/common';
import { vi } from 'vitest';
import matchers from './__tests__/helpers/matchers';

// Mock katex CSS import (from streamdown dependency)
vi.mock('katex/dist/katex.min.css', () => ({}));
expect.extend(matchers as any);

// Mock environment variables to prevent server-side access errors in tests
vi.mock('./env', () => ({
  env: {
    ANTHROPIC_API_KEY: 'test-anthropic-key',
    OPENAI_API_KEY: 'test-openai-key',
    PERPLEXITY_API_KEY: 'test-perplexity-key',
    XAI_API_KEY: 'test-xai-key',
    GOOGLE_API_KEY: 'test-google-key',
    GOOGLE_GENERATIVE_AI_API_KEY: 'test-google-key',
    GOOGLE_GENERATIVE_AI_BASE_URL: undefined,
    MISTRAL_API_KEY: undefined,
    COHERE_API_KEY: undefined,
    GROQ_API_KEY: undefined,
    TOGETHER_API_KEY: undefined,
    REPLICATE_API_KEY: undefined,
    FIREWORKS_API_KEY: undefined,
    DEEPSEEK_API_KEY: undefined,
    DEFAULT_AI_MODEL: undefined,
    AI_RETRY_ATTEMPTS: 3,
    AI_TELEMETRY: true,
    AI_COST_TRACKING: false,
    ANTHROPIC_BASE_URL: undefined,
    OPENAI_BASE_URL: undefined,
    OPENAI_ORGANIZATION: undefined,
    LM_STUDIO_BASE_URL: undefined,
    LM_STUDIO_MODEL: undefined,
    LM_STUDIO_MODELS: undefined,
    CLAUDE_CODE_ANTHROPIC_DIR: undefined,
    CLAUDE_CODE_ALLOWED_TOOLS: undefined,
    CLAUDE_CODE_DISALLOWED_TOOLS: undefined,
    CLAUDE_CODE_MCP_SERVERS: undefined,
    CLOUDFLARE_ACCOUNT_ID: undefined,
    CLOUDFLARE_AI_GATEWAY_NAME: undefined,
    CLOUDFLARE_API_KEY: undefined,
    CLOUDFLARE_AI_GATEWAY_CACHE_TTL: undefined,
    CLOUDFLARE_AI_GATEWAY_SKIP_CACHE: undefined,
    CLOUDFLARE_AI_GATEWAY_MAX_RETRIES: undefined,
    AI_GATEWAY_API_KEY: undefined,
    AI_GATEWAY_BASE_URL: undefined,
    AI_GATEWAY_TIMEOUT: undefined,
    UPSTASH_VECTOR_REST_URL: undefined,
    UPSTASH_VECTOR_REST_TOKEN: undefined,
    VECTOR_EMBEDDING_MODEL: 'text-embedding-ada-002',
    VECTOR_EMBEDDING_DIMENSIONS: '1536',
    VECTOR_SIMILARITY_THRESHOLD: '0.8',
    VECTOR_NAMESPACE: 'default',
    VECTOR_BATCH_SIZE: '100',
    VECTOR_LOG_LEVEL: 'error',
    VECTOR_LOG_PERFORMANCE: false,
  },
  safeEnv: () => ({
    ANTHROPIC_API_KEY: 'test-anthropic-key',
    OPENAI_API_KEY: 'test-openai-key',
    PERPLEXITY_API_KEY: 'test-perplexity-key',
    XAI_API_KEY: 'test-xai-key',
    GOOGLE_API_KEY: 'test-google-key',
    GOOGLE_GENERATIVE_AI_API_KEY: 'test-google-key',
    GOOGLE_GENERATIVE_AI_BASE_URL: '',
    MISTRAL_API_KEY: '',
    COHERE_API_KEY: '',
    GROQ_API_KEY: '',
    TOGETHER_API_KEY: '',
    REPLICATE_API_KEY: '',
    FIREWORKS_API_KEY: '',
    DEEPSEEK_API_KEY: '',
    DEFAULT_AI_MODEL: '',
    AI_RETRY_ATTEMPTS: 3,
    AI_TELEMETRY: true,
    AI_COST_TRACKING: false,
    ANTHROPIC_BASE_URL: '',
    OPENAI_BASE_URL: '',
    OPENAI_ORGANIZATION: '',
    LM_STUDIO_BASE_URL: '',
    LM_STUDIO_MODEL: '',
    LM_STUDIO_MODELS: '',
    CLAUDE_CODE_ANTHROPIC_DIR: '',
    CLAUDE_CODE_ALLOWED_TOOLS: '',
    CLAUDE_CODE_DISALLOWED_TOOLS: '',
    CLAUDE_CODE_MCP_SERVERS: '',
    CLOUDFLARE_ACCOUNT_ID: '',
    CLOUDFLARE_AI_GATEWAY_NAME: '',
    CLOUDFLARE_API_KEY: '',
    CLOUDFLARE_AI_GATEWAY_CACHE_TTL: undefined,
    CLOUDFLARE_AI_GATEWAY_SKIP_CACHE: false,
    CLOUDFLARE_AI_GATEWAY_MAX_RETRIES: undefined,
    AI_GATEWAY_API_KEY: '',
    AI_GATEWAY_BASE_URL: '',
    AI_GATEWAY_TIMEOUT: undefined,
    UPSTASH_VECTOR_REST_URL: '',
    UPSTASH_VECTOR_REST_TOKEN: '',
    VECTOR_EMBEDDING_MODEL: 'text-embedding-ada-002',
    VECTOR_EMBEDDING_DIMENSIONS: '1536',
    VECTOR_SIMILARITY_THRESHOLD: '0.8',
    VECTOR_NAMESPACE: 'default',
    VECTOR_BATCH_SIZE: '100',
    VECTOR_LOG_LEVEL: 'error',
    VECTOR_LOG_PERFORMANCE: false,
  }),
}));
