# Feature Flags Package Environment Variables
# Copy relevant variables to your app's .env.local file

# =============================================================================
# POSTHOG FEATURE FLAGS (Primary Provider)
# =============================================================================

# PostHog API Configuration (for feature flags)
POSTHOG_KEY=phc_your-posthog-api-key-here
POSTHOG_HOST=https://app.posthog.com
POSTHOG_PERSONAL_API_KEY=phx_your-personal-api-key-here
POSTHOG_PROJECT_ID=12345

# PostHog Client Configuration (for client-side flags)
NEXT_PUBLIC_POSTHOG_KEY=phc_your-posthog-public-key-here
NEXT_PUBLIC_POSTHOG_HOST=https://app.posthog.com

# =============================================================================
# VERCEL EDGE CONFIG (Alternative Provider)
# =============================================================================

# Vercel Edge Config (optional alternative to PostHog)
# Get from: https://vercel.com/dashboard/edge-config
EDGE_CONFIG=ecfg_your-edge-config-id-here

# =============================================================================
# LOCAL DEVELOPMENT FLAGS (Optional)
# =============================================================================

# Local flag overrides (JSON string)
# Use for testing specific flag states locally
LOCAL_FLAGS={"new-dashboard":true,"beta-features":false}

# Enable local flag overrides
ENABLE_LOCAL_FLAGS=true

# =============================================================================
# FEATURE FLAG CONFIGURATION (Optional)
# =============================================================================

# Default flag values (fallbacks when service is unavailable)
DEFAULT_FLAGS={"maintenance-mode":false,"premium-features":false}

# Flag evaluation timeout (milliseconds)
FLAG_EVALUATION_TIMEOUT=1000

# Cache feature flags (improves performance)
ENABLE_FLAG_CACHING=true
FLAG_CACHE_TTL=300

# =============================================================================
# ENVIRONMENT CONFIGURATION
# =============================================================================

# Feature flag environment
FLAG_ENVIRONMENT=development

# Enable flag debugging
FLAG_DEBUG_MODE=true

# Flag evaluation fallback strategy (optimistic, pessimistic)
FLAG_FALLBACK_STRATEGY=pessimistic

# =============================================================================
# SETUP INSTRUCTIONS
# =============================================================================

# 1. PostHog Setup (Recommended):
#    - Create account at https://posthog.com/
#    - Get API keys from Project Settings
#    - Create feature flags in PostHog dashboard
#    - Configure user targeting and rollout percentages

# 2. Vercel Edge Config Setup (Alternative):
#    - Create Edge Config in Vercel dashboard
#    - Add flag configurations as key-value pairs
#    - Connect to your project
#    - Use for simple boolean flags

# 3. Local Development:
#    - Use LOCAL_FLAGS for testing specific scenarios
#    - Override production flags locally
#    - Test different flag combinations

# 4. Flag Naming Conventions:
#    - Use kebab-case: "new-dashboard", "beta-features"
#    - Be descriptive: "enable-new-checkout-flow"
#    - Include prefix for organization: "ui-new-sidebar"

# 5. Flag Types:
#    Boolean Flags:
#    - Simple on/off switches
#    - Feature toggles
#    - Kill switches
#    
#    String Flags:
#    - Configuration values
#    - API endpoints
#    - Feature variants
#    
#    Number Flags:
#    - Rate limits
#    - Timeouts
#    - Percentage rollouts

# 6. Best Practices:
#    - Start with low rollout percentages
#    - Use targeting based on user properties
#    - Monitor flag performance impact
#    - Clean up unused flags regularly
#    - Document flag purposes and owners

# 7. Targeting Examples:
#    - Beta users: email contains "@company.com"
#    - Geographic: country = "US"
#    - Plan-based: subscription_plan = "premium"
#    - Random rollout: 10% of users

# 8. Flag Examples:
#    Development Flags:
#    - "debug-mode": Show debug information
#    - "mock-api": Use mock API responses
#    - "feature-preview": Show upcoming features
#    
#    Production Flags:
#    - "maintenance-mode": Show maintenance page
#    - "new-ui": Enable redesigned interface
#    - "payment-v2": Use new payment system
#    - "rate-limit-increase": Higher API limits

# 9. Flag Evaluation Order:
#    1. Local overrides (LOCAL_FLAGS)
#    2. PostHog/Edge Config
#    3. Default values (DEFAULT_FLAGS)
#    4. Hard-coded fallbacks

# 10. Performance Considerations:
#     - Cache flag values when possible
#     - Use async evaluation for non-critical flags
#     - Implement circuit breakers for flag services
#     - Monitor flag evaluation latency